# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Float!
  createdAt: Float!
  updatedAt: Float!
  name: String!
  coverImage: String!
  restaurants: [Restaurant!]!
}

type Restaurant {
  id: Float!
  createdAt: Float!
  updatedAt: Float!
  name: String!
  coverImage: String!
  address: String!
  category: Category
  owner: User!
}

type User {
  id: Float!
  createdAt: Float!
  updatedAt: Float!
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurants: [Restaurant!]!
}

enum UserRole {
  Client
  Owner
  Delivery
}

type CreateAccountOutput {
  error: String
  ok: Boolean!
}

type EditAccountOutput {
  error: String
  ok: Boolean!
}

type LoginAccountOutput {
  error: String
  ok: Boolean!
  token: String
}

type UserAccountOutput {
  error: String
  ok: Boolean!
  user: User
}

type VerifyEmailOutput {
  error: String
  ok: Boolean!
}

type Query {
  me: User!
  user(userId: Float!): UserAccountOutput!
  restaurants: [Restaurant!]!
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  loginAccount(input: LoginAccountInput!): LoginAccountOutput!
  editProfile(input: EditAccountInput!): EditAccountOutput!
  verifyEmail(input: VerifyEmailInput!): VerifyEmailOutput!
  createRestaurant(input: CreateRestaurantDto!): Boolean!
  updateRestaurant(id: Float!, data: UpdateRestaurantInputType!): Boolean!
}

input CreateAccountInput {
  email: String!
  password: String!
  role: UserRole!
}

input LoginAccountInput {
  email: String!
  password: String!
}

input EditAccountInput {
  email: String
  password: String
}

input VerifyEmailInput {
  code: String!
}

input CreateRestaurantDto {
  createdAt: Float!
  updatedAt: Float!
  name: String!
  coverImage: String!
  address: String!
  category: CategoryInputType
  owner: UserInputType!
}

input CategoryInputType {
  name: String!
  coverImage: String!
  restaurants: [RestaurantInputType!]!
}

input RestaurantInputType {
  name: String!
  coverImage: String!
  address: String!
  category: CategoryInputType
  owner: UserInputType!
}

input UserInputType {
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurants: [RestaurantInputType!]!
}

input UpdateRestaurantInputType {
  createdAt: Float
  updatedAt: Float
  name: String
  coverImage: String
  address: String
  category: CategoryInputType
  owner: UserInputType
}